generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// models

model User {
  userId        Int      @id @default(autoincrement())
  email         String   @unique
  username      String   @unique
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userType      userType @default(STUDENT)
  registrations EventRegistration[]
}

enum userType {
  STUDENT
  FACULTY
  CLUBINCHARGE
  ADMIN
}

model EventRegistration {
  registrationId           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [userId])
  userId       Int
  username     String     @map("username") // Map to the username column in the database
  event        createEvent @relation(fields: [eventId], references: [eventId])
  eventId      Int
  eventName    String     @map("eventName") // Map to the event_name column in the database
  registration DateTime   @default(now())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model createEvent {
  eventId                 Int          @id @default(autoincrement())
  eventName          String       
  eventDescription   String       
  eventDate          DateTime
  eventTime          DateTime
  eventVenue         String
  eventPlatform      String
  speakerName        String
  speakerDesignation String
  speakerDescription String
  eventType1         eventType1   @default(OFFLINE)
  eventType2         eventType2   @default(EVERYONE)
  organisingClub     organisingClub  @default(SELECT)
  createdAt          DateTime     @default(now())
  updatedAt          DateTime   @updatedAt
  deletedAt          DateTime?    @map("deleted_at")
  registrations      EventRegistration[]
}

enum organisingClub {
  SELECT
  CODEX
  GDSC
  CBC
  ARVR
  AI
  MOSAIC
  WWR
  TPC
  SPACEASTRONOMY
}

enum eventType1 {
  ONLINE
  OFFLINE
}

enum eventType2 {
  CLUBMEMBERS
  EVERYONE
}